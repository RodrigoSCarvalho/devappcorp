package com.devappcorp.projetodevappcorp.controller;


import com.devappcorp.projetodevappcorp.persistencia.Author;
import com.devappcorp.projetodevappcorp.persistencia.AuthorRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.web.bind.annotation.*;

@RestController // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class controllerAuthor {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private AuthorRepository authorRepository;

    @PostMapping(path="/add") // Map ONLY POST Requests
    @ResponseStatus(HttpStatus.CREATED)
    public @ResponseBody String addNewAuthor(@RequestBody String orcid, String nome, String sobrenome, String afiliacao, String email ) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        Author a = new Author();
        a.setOrcid(orcid);
        a.setAfiliacao(afiliacao);
        a.setNome(nome);
        a.setSobrenome(sobrenome);
        a.setEmail(email);


        authorRepository.save(a);
        return "Salvo!";
    }

    @GetMapping(path="/all")
    public @ResponseBody Iterable<Author> getAllAuthor() {
        // This returns a JSON or XML with the users
        return authorRepository.findAll();
    }
}